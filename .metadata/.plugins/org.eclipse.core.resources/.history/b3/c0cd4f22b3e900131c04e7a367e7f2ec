import java.awt.BorderLayout;
import java.awt.FlowLayout;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import java.awt.GridBagLayout;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.GridLayout;

import javax.swing.JLabel;
import javax.swing.JTextField;

import java.awt.GridBagConstraints;
import java.awt.Image;
import java.awt.Insets;
import java.awt.List;

import javax.swing.JList;

import connexion.paramsconnexion;

import java.awt.Button;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JScrollPane;


public class FenVendeur extends JDialog {
	private JTextField txtnum;
	private JTextField txtprix;
	private JTextField txtdescrip;
	private JTextField txtnom;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			FenVendeur dialog = new FenVendeur();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Create the dialog.
	 * @throws IOException 
	 */
	public FenVendeur() throws IOException {
		setBounds(100, 100, 520, 300);
		{
			JPanel panel = new JPanel();
			getContentPane().add(panel, BorderLayout.WEST);
			GridBagLayout gbl_panel = new GridBagLayout();
			gbl_panel.columnWidths = new int[]{46, 86, 0};
			gbl_panel.rowHeights = new int[]{20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
			gbl_panel.columnWeights = new double[]{0.0, 1.0, Double.MIN_VALUE};
			gbl_panel.rowWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
			panel.setLayout(gbl_panel);
			
			JLabel lblNewLabel = new JLabel("Nom du jeux");
			GridBagConstraints gbc_lblNewLabel = new GridBagConstraints();
			gbc_lblNewLabel.insets = new Insets(0, 0, 5, 5);
			gbc_lblNewLabel.gridx = 0;
			gbc_lblNewLabel.gridy = 1;
			panel.add(lblNewLabel, gbc_lblNewLabel);
			
			txtnom = new JTextField();
			GridBagConstraints gbc_txtnom = new GridBagConstraints();
			gbc_txtnom.insets = new Insets(0, 0, 5, 0);
			gbc_txtnom.fill = GridBagConstraints.HORIZONTAL;
			gbc_txtnom.gridx = 1;
			gbc_txtnom.gridy = 1;
			panel.add(txtnom, gbc_txtnom);
			txtnom.setColumns(10);
			
			JLabel lblNewLabel_1 = new JLabel("Numero de serie du jeux");
			GridBagConstraints gbc_lblNewLabel_1 = new GridBagConstraints();
			gbc_lblNewLabel_1.insets = new Insets(0, 0, 5, 5);
			gbc_lblNewLabel_1.gridx = 0;
			gbc_lblNewLabel_1.gridy = 2;
			panel.add(lblNewLabel_1, gbc_lblNewLabel_1);
			
			txtnum = new JTextField();
			GridBagConstraints gbc_txtnum = new GridBagConstraints();
			gbc_txtnum.insets = new Insets(0, 0, 5, 0);
			gbc_txtnum.fill = GridBagConstraints.HORIZONTAL;
			gbc_txtnum.gridx = 1;
			gbc_txtnum.gridy = 2;
			panel.add(txtnum, gbc_txtnum);
			txtnum.setColumns(10);
			
			JLabel lblNewLabel_2 = new JLabel("Prix du jeux");
			GridBagConstraints gbc_lblNewLabel_2 = new GridBagConstraints();
			gbc_lblNewLabel_2.insets = new Insets(0, 0, 5, 5);
			gbc_lblNewLabel_2.gridx = 0;
			gbc_lblNewLabel_2.gridy = 3;
			panel.add(lblNewLabel_2, gbc_lblNewLabel_2);
			
			txtprix = new JTextField();
			GridBagConstraints gbc_txtprix = new GridBagConstraints();
			gbc_txtprix.insets = new Insets(0, 0, 5, 0);
			gbc_txtprix.fill = GridBagConstraints.HORIZONTAL;
			gbc_txtprix.gridx = 1;
			gbc_txtprix.gridy = 3;
			panel.add(txtprix, gbc_txtprix);
			txtprix.setColumns(10);
			
			JLabel lblNewLabel_3 = new JLabel("Description");
			GridBagConstraints gbc_lblNewLabel_3 = new GridBagConstraints();
			gbc_lblNewLabel_3.insets = new Insets(0, 0, 5, 5);
			gbc_lblNewLabel_3.gridx = 0;
			gbc_lblNewLabel_3.gridy = 4;
			panel.add(lblNewLabel_3, gbc_lblNewLabel_3);
			
			txtdescrip = new JTextField();
			GridBagConstraints gbc_txtdescrip = new GridBagConstraints();
			gbc_txtdescrip.insets = new Insets(0, 0, 5, 0);
			gbc_txtdescrip.fill = GridBagConstraints.HORIZONTAL;
			gbc_txtdescrip.gridx = 1;
			gbc_txtdescrip.gridy = 4;
			panel.add(txtdescrip, gbc_txtdescrip);
			txtdescrip.setColumns(10);
		}
		
		JPanel panel = new JPanel();
		getContentPane().add(panel, BorderLayout.SOUTH);
		
		JButton ajouter = new JButton("Ajoutter");
		panel.add(ajouter);
		ajouter.setBounds(285, 349, 100, 30);
		
		JButton effacer = new JButton("Efface Saisie");
		panel.add(effacer);
		effacer.setBounds(285, 349, 100, 30);
		
		JButton supprimer = new JButton("Supprimer");
		panel.add(supprimer);
		supprimer.setBounds(285, 349, 100, 50);
		
		JButton quitter = new JButton("Quitter");
		quitter.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
                System.exit(0);
			}
		});
		panel.add(quitter);
		quitter.setBounds(285, 349, 100, 30);
		
		JScrollPane scrollPane = new JScrollPane();
		JLabel test = new JLabel();
		ImageIcon img = new ImageIcon(FenVendeur.class.getResource("jeux.jpg")); 
		this.setIconImage(img.getImage());
		test= new JLabel(img);
		getContentPane().add(test,BorderLayout.CENTER);
		//getContentPane().add(scrollPane, BorderLayout.CENTER);
		
		
		
		
		
		
		ajouter.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				Connection connexion = null;
				PreparedStatement pst=null;
				String sql = null;
				ResultSet rsKey = null;
				try {
					connexion = DriverManager.getConnection(paramsconnexion.URL,paramsconnexion.ADMIN,paramsconnexion.PASSWORD);
			
					
					sql = "Insert INTO jeux VALUES(Null,?, ?,?, ?);";
					
					pst = connexion.prepareStatement(sql);
					
					// remplacer les ? par leur valeur
					
				    
					pst.setString(1,txtnom.getText());
					pst.setString(2,txtnum.getText());
					pst.setString(3,txtprix.getText());
				    pst.setString(4,txtdescrip.getText());
					
					//PreparedStatement gere les simple quotes
					
					int val = pst.executeUpdate();
					System.out.println("valeur : " + val);
					JOptionPane.showMessageDialog(null, "Un produit a ete ajouté");
					//System.out.println();
					// traiter la recuperation de la PK
					//si le serveur le permet
					//rsKey =pst.getGeneratedKeys();
					// je suis en beforeFirst utiliser newt()
					//rsKey.next();
					//int valPK = rsKey.getInt(1);
					//System.out.println("La valeur de la ValPK "+ valPK);
				
				} catch (SQLException f) {
					// TODO Auto-generated catch block
					f.printStackTrace();
					System.out.println("Parametres incorrect");
				}
				
				finally{
					//fermer mes objets
					if(rsKey !=null){
						
						try {
							rsKey.close();
						} catch (SQLException f) {
							// TODO Auto-generated catch block
							f.printStackTrace();
						
						}
					}
					
					if(pst !=null){
						try {
							pst.close();
						} catch (SQLException d) {
							// TODO Auto-generated catch block
							d.printStackTrace();
						
						}
					}
					if(connexion !=null){
						try {
							connexion.close();
						} catch (SQLException d) {
							// TODO Auto-generated catch block
							d.printStackTrace();
							System.out.println("Parametres incorrect");
						}
					}
				}
			}
		});
	}

}
